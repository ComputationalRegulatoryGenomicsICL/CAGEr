% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CAGEexp.R
\docType{class}
\name{CAGEexp-class}
\alias{CAGEexp-class}
\title{CAGEr class to hold all data and metadata about one CAGE experiment.}
\description{
The \code{CAGEr} class is a \code{\link[MultiAssayExperiment]{MultiAssayExperiment}}
object containing all data and metadata about a set of CAGE libraries.  It
is a replacement for the \code{\link{CAGEset}} class.  The main difference
is that the expression data is stored in \code{\link[S4Vectors]{DataFrame}} objects
of \code{\link[S4Vectors]{Rle}}-encoded expression values, instead of plain
\code{data.frame}s.  With large datasets, this saves considerable amounts of memory.
}
\details{
If \code{genomeName} is \code{NULL}, checks of chromosome names will be
disabled and G-correction will not be possible.  See https://support.bioconductor.org/p/86437/
for an example on how to create a BSgenome package.
}
\section{Slots}{

\describe{
\item{\code{metadata}}{A list that must at least contain \code{genomeName} and
\code{inputFilesType} members.}
}}

\examples{

library("BSgenome.Drerio.UCSC.danRer7")
library("MultiAssayExperiment")
pathsToInputFiles <- list.files( system.file("extdata", package = "CAGEr")
                               , "ctss$"
                               , full.names = TRUE)
sampleLabels <- sub( ".chr17.ctss", "", basename(pathsToInputFiles))
myCAGEexp <-
  new( "CAGEexp"
     , colData = DataFrame( inputFiles     = pathsToInputFiles
                          , sampleLabels   = sampleLabels
                          , inputFilesType = "ctss"
                          , row.names      = sampleLabels)
     , metadata = list(genomeName = "BSgenome.Drerio.UCSC.danRer7"))

# Expression data is loaded by the getCTSS() function, that also calculates
# library sizes and store them in the object's column data.

getCTSS(myCAGEexp)
librarySizes(myCAGEexp)
colData(myCAGEexp)

# CTSS data is stored internally as a SummarizedExperiemnt that can be retreived
# as a whole, or as GRanges, or as an expression DataFrame.

CTSStagCountSE(myCAGEexp)
CTSScoordinatesGR(myCAGEexp)
CTSStagCountDF(myCAGEexp)

# Columns of the "colData" table are accessible directly via the "$" operator.

myCAGEexp$l1 <- colSums(CTSStagCountDf(myCAGEexp) > 0)
myCAGEexp$l1

}
\seealso{
CAGEset-class
}
