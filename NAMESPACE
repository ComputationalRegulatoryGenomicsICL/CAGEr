# Generated by roxygen2: do not edit by hand

export("genomeName<-")
export("inputFiles<-")
export("inputFilesType<-")
export("sampleLabels<-")
export(CTSSclusteringMethod)
export(CTSScoordinates)
export(CTSScoordinatesGR)
export(CTSSnormalizedTpm)
export(CTSStagCount)
export(CTSStagCountDF)
export(CTSStagCountDf)
export(CTSStagCountSE)
export(CTSStagCountTable)
export(CTSStoGenes)
export(GeneExpSE)
export(aggregateTagClusters)
export(annotateCTSS)
export(clusterCTSS)
export(consensusClusters)
export(consensusClustersTpm)
export(cumulativeCTSSdistribution)
export(exportCTSStoBedGraph)
export(exportToBed)
export(expressionClasses)
export(extractExpressionClass)
export(genomeName)
export(getCTSS)
export(getExpressionProfiles)
export(getShiftingPromoters)
export(importPublicData)
export(inputFiles)
export(inputFilesType)
export(librarySizes)
export(mergeCAGEsets)
export(mergeSamples)
export(normalizeTagCount)
export(plotAnnot)
export(plotCorrelation)
export(plotExpressionProfiles)
export(plotInterquantileWidth)
export(plotReverseCumulatives)
export(quantilePositions)
export(sampleLabels)
export(scoreShift)
export(setColors)
export(tagClusters)
exportClasses(CAGEexp)
exportClasses(CAGEset)
exportMethods(coerce)
exportMethods(show)
import(GenomicRanges)
import(IRanges)
import(MultiAssayExperiment)
import(Rsamtools)
import(S4Vectors)
import(SummarizedExperiment)
import(data.table)
import(ggplot2)
import(methods)
import(utils)
importFrom(BSgenome,available.genomes)
importFrom(GenomicRanges,findOverlaps)
importFrom(GenomicRanges,promoters)
importFrom(IRanges,extractList)
importFrom(S4Vectors,DataFrame)
importFrom(S4Vectors,List)
importFrom(S4Vectors,Rle)
importFrom(S4Vectors,unstrsplit)
importFrom(SummarizedExperiment,SummarizedExperiment)
importFrom(VGAM,zeta)
importFrom(beanplot,beanplot)
importFrom(data.table,data.table)
importFrom(data.table,setkey)
importFrom(data.table,setnames)
importFrom(gtools,mixedorder)
importFrom(reshape,melt)
importFrom(rtracklayer,export)
importFrom(rtracklayer,export.bw)
importFrom(rtracklayer,import.bed)
importFrom(som,som)
